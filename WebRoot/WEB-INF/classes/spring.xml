<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		">
		<!-- 
			spring主要是创建bean的容器（service+Repository）
		 -->
		
	<!-- 扫描注解，并创建bean-->
	<context:component-scan base-package="cn">
		<!-- 不扫描以下注解 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!--
		 所有要操作数据库  必须实现DataSource用它的子类
		 DriverManagerDataSource  一次请求就产生一个连接，用完关闭就关闭连接
		 常用的连接池：
		 dbCp  c3p0  druid:https://github.com	
	-->
	<!-- 指定用于连接数据库的资源文件的位置 -->
	<context:property-placeholder location="classpath:jdbcMysql.properties"/>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="url" value="${url}"></property>
		<property name="driverClassName" value="${driverClass}"></property>
		<property name="username" value="${userName1}"></property>
		<property name="password" value="${passWord}"></property>
		<!-- 默认初始化多少连接数 -->
		<property name="initialSize" value="1"></property>
		<!-- 设置最大连接数 -->
		<property name="maxActive" value="200"></property>
		<!-- 设置等待连接数 -->
		<property name="maxIdle" value="100"></property>
		<!-- 开启监控 -->
		<property name="filters" value="stat"></property>
	</bean>
	
	<!-- 集成mybatis 配置session工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 创建session -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- 构造器注入 -->
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- 扫描mybatis的接口映射 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.*..*.dao"></property>
	</bean>
	
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
    		<tx:method name="save*"/>
    		<tx:method name="delete*"/>
    		<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	
	<aop:config>
		<aop:pointcut expression="execution(* cn.*..*.service.*.*(..))" id="myPointCut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="myPointCut"/>
	</aop:config>
	
</beans> 